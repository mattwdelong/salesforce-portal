function ajax(a,b){return new Ember.RSVP.Promise(function(c,d){b=b||{},b.url=a,Ember.$.ajax(b).done(function(a){console.log(a),"Success"==a.response?c(a):d(new Error(a.message))}).fail(function(b,c,e){d(new Error("AJAX: `"+a+"` failed with status: ["+c+"] "+e))})})}App=Ember.Application.create({LOG_TRANSITIONS:!0}),App.Router.map(function(){this.resource("index",{path:"/"}),this.resource("people",{path:"/people"}),this.resource("person",{path:"/person/:Id"}),this.resource("contact",{path:"/contact"})}),App.PeopleController=Ember.ArrayController.extend({getPermissions:function(){var a=this;App.Person.permissions().then(function(b){a.set("permissions",b.permissions)})},findPeople:function(){var a=this.get("find_name");if(a&&(a=a.replace(/^\s+|\s+$/g,""),0!=a.length)){var b={name:a},c=this;App.Person.find(b).then(function(a){var b=a.results;c.get("content").setObjects(b.records)}).catch(function(a){c.set("error",a.message)})}},actions:{findPeople:function(){this.findPeople()},clearFind:function(){this.set("find_name",null),this.transitionToRoute("index")}}}),App.PersonController=Ember.ObjectController.extend({getPermissions:function(){var a=this;App.Person.permissions().then(function(b){a.set("permissions",b.permissions)})},actions:{toggleTeam:function(a){var b=[],c=this;App.Person.updateTeam(this.get("model").Id,a.team_id).then(function(d){a.in_team=d.team.in_team,a.access_manage=d.team.access_manage,a.access_contact=d.team.access_contact,c.get("model").team_serving.forEach(function(c){b.push(c.team_id==a.team_id?a:c)}),c.get("model").team_serving.setObjects(b)}).catch(function(a){c.set("error",a.message)})}.observes("team_serving"),toggleSmallGroup:function(a){var b=[],c=this;App.Person.updateSmallGroup(this.get("model").Id,a.group_id).then(function(d){a.in_group=d.small_group.in_group,a.leader=d.small_group.leader,c.get("model").small_groups.forEach(function(c){b.push(c.group_id==a.group_id?a:c)}),c.get("model").small_groups.setObjects(b)}).catch(function(a){c.set("error",a.message)})}.observes("small_groups")}}),App.ContactController=Ember.ObjectController.extend({contactIds:[],members:[],teamsUnselected:[],teamsSelected:[],inProgress:!1,reset:function(){var a=this.get("model").teams;this.set("teamsUnselected",a)},refreshTeamsView:function(){var a=this,b=[];a.get("teamsSelected").forEach(function(a){b.push(a.Id)}),App.Contact.team_members(b).then(function(b){var c=[];b.members.forEach(function(a){a.Email&&c.push(a)}),a.set("members",c),a.set("inProgress",!1)})},actions:{selectTeam:function(a){var b=this;b.set("inProgress",!0);var c=b.get("teamsSelected").indexOf(a);c>=0||(b.get("teamsSelected").addObject(a),b.get("teamsUnselected").removeObject(a),b.refreshTeamsView())},deselectTeam:function(a){var b=this;b.set("inProgress",!0),b.get("teamsSelected").removeObject(a),b.get("teamsUnselected").addObject(a),b.refreshTeamsView()}}}),Ember.Handlebars.registerBoundHelper("emailList",function(a){return a.map(function(a){return a.Name+" <"+a.Email+">"}).join(", ")}),App.Person=Ember.Object.extend({}),App.Person.reopenClass({url:"/api/people",getAll:function(a){var b=this.url;return a&&(b=this.url+"/page/"+a),ajax(b,{type:"GET",contentType:"application/json; charset=utf-8"})},find:function(a){return ajax(this.url+"/find",{type:"POST",data:JSON.stringify(a),contentType:"application/json; charset=utf-8",dataType:"json"})},findById:function(a){return a&&"undefined"!==a||(a="me"),ajax(this.url+"/"+a,{type:"GET",contentType:"application/json; charset=utf-8",dataType:"json"})},updateTeam:function(a,b){return ajax(this.url+"/"+a+"/team/"+b,{type:"POST",data:JSON.stringify({}),contentType:"application/json; charset=utf-8",dataType:"json"})},updateSmallGroup:function(a,b){return ajax(this.url+"/"+a+"/small_group/"+b,{type:"POST",data:JSON.stringify({}),contentType:"application/json; charset=utf-8",dataType:"json"})},permissions:function(){return ajax("/api/permissions",{type:"POST",data:JSON.stringify({}),contentType:"application/json; charset=utf-8",dataType:"json"})}}),App.Contact=Ember.Object.extend({}),App.Contact.reopenClass({url:"/api/contact",all:function(){return ajax(this.url,{type:"POST",data:JSON.stringify({}),contentType:"application/json; charset=utf-8",dataType:"json"})},teams:function(){return ajax(this.url+"/teams",{type:"POST",data:JSON.stringify({}),contentType:"application/json; charset=utf-8",dataType:"json"})},team_members:function(a){return ajax(this.url+"/teams/selected",{type:"POST",data:JSON.stringify({selected_teams:a}),contentType:"application/json; charset=utf-8",dataType:"json"})}}),App.IndexRoute=Ember.Route.extend({beforeModel:function(){this.transitionTo("people")}}),App.PeopleRoute=Ember.Route.extend({model:function(){return[]},setupController:function(a,b){console.log("Setup PeopleRoute"),a.set("content",b),a.getPermissions(),a.findPeople()}}),App.PersonRoute=Ember.Route.extend({model:function(a){return"undefined"===a.id&&this.transitionTo("person","me"),App.Person.findById(a.Id).then(function(a){return console.log(a.person.small_groups.records),a.person})},setupController:function(a,b){console.log("Setup PersonRoute"),a.set("content",b),a.getPermissions()}}),App.ContactRoute=Ember.Route.extend({model:function(){return App.Contact.all().then(function(a){return a.data})},setupController:function(a,b){console.log("Setup ContactRoute"),a.set("content",b),a.reset()}});