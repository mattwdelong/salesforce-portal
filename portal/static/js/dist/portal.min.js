function ajax(a,b){return new Ember.RSVP.Promise(function(c,d){b=b||{},b.url=a,Ember.$.ajax(b).done(function(a){console.log(a),"Success"==a.response?c(a):d(new Error(a.message))}).fail(function(b,c,e){d(new Error("AJAX: `"+a+"` failed with status: ["+c+"] "+e))})})}App=Ember.Application.create({LOG_TRANSITIONS:!0}),App.Router.map(function(){this.resource("index",{path:"/"}),this.resource("people",{path:"/people"}),this.resource("person",{path:"/person/:Id"}),this.resource("contact",{path:"/contact"}),this.resource("events",{path:"/events"}),this.resource("event",{path:"/event/:Id"})}),App.ContactController=Ember.ObjectController.extend({contactIds:[],members:[],teamsUnselected:[],teamsSelected:[],smallGroupsUnselected:[],smallGroupsSelected:[],inProgress:!1,reset:function(){var a=this.get("model").teams;this.set("teamsUnselected",a)},refreshTeamsView:function(){var a=this,b=[],c=[];a.get("teamsSelected").forEach(function(a){b.push(a.Id)}),a.get("smallGroupsSelected").forEach(function(a){c.push(a.Id)}),App.Contact.team_members(b,c).then(function(b){var c=[];b.members.forEach(function(a){a.Email&&c.push(a)}),a.set("members",c),a.set("inProgress",!1)})},actions:{selectTeam:function(a){var b=this;b.set("inProgress",!0);var c=b.get("teamsSelected").indexOf(a);if(!(c>=0)){b.get("teamsSelected").pushObject(a);var c=b.get("teamsUnselected").indexOf(a);b.get("teamsUnselected").splice(c,1),b.refreshTeamsView()}},deselectTeam:function(a){var b=this;b.set("inProgress",!0),b.get("teamsSelected").removeObject(a),b.get("teamsUnselected").addObject(a),b.refreshTeamsView()},selectSmallGroup:function(a){var b=this;b.set("inProgress",!0);var c=b.get("smallGroupsSelected").indexOf(a);c>=0||(b.get("smallGroupsSelected").pushObject(a),b.refreshTeamsView())},deselectSmallGroup:function(a){var b=this;b.set("inProgress",!0),b.get("smallGroupsSelected").removeObject(a),b.get("smallGroupsUnselected").addObject(a),b.refreshTeamsView()}}}),App.EventController=Ember.ObjectController.extend({registration_date:moment().format("YYYY-MM-DD"),status_options:[{name:"ALL",selected:!0},{name:"Attended",selected:!1},{name:"Signed-In",selected:!1},{name:"Signed-Out",selected:!1}],status:"ALL",filteredCount:0,type_options:[{name:"ALL",selected:!0},{name:"Child",selected:!1},{name:"Youth",selected:!1},{name:"Adult",selected:!1},{name:"Senior",selected:!1}],type:"ALL",kids_options:[{name:"ALL",selected:!0},{name:"Preschool",selected:!1},{name:"Primary",selected:!1}],kids:"ALL",reset:function(){this.set("status",null),this.set("status","ALL"),this.set("filteredCount",this.get("model").registrations.length)}.observes("model.registrations"),getRegistrations:function(){var a=this;App.Event.findById(a.get("model").Id,a.get("registration_date")).then(function(b){a.set("model",b.data),a.set("model.registrations",b.data.registrations)})}.observes("registration_date"),filter:function(){var a,b=this.get("status");if(a=this.get("Kidswork"==this.get("model.Type__c")?"kids":"type"),"ALL"==b&&"ALL"==a)return this.set("filteredCount",this.get("model.registrations").length),this.get("model.registrations");var c;if("ALL"==b)c=this.get("model.registrations");else{var d=new RegExp(b,"gi");c=this.get("model.registrations").filter(function(a){return a.Status.match(d)})}if("ALL"!=a){var d=new RegExp(a,"gi");c=c.filter("Kidswork"==this.get("model.Type__c")?function(a){return a.KidsGroup.match(d)}:function(a){return a.Type.match(d)})}return this.set("filteredCount",c.length),c},filteredRegistrations:function(){return this.filter()}.property("arrangedContent","status","type","kids"),isKidswork:function(){return"Kidswork"==this.get("model.Type__c")?!0:!1}.property("model.Type__c"),setOption:function(a,b,c){var d=[],e=this;return e.set(b,a.name),e.get(c).forEach(function(a){e.get(b)==a.name?(a.selected=!0,d.push(a)):(a.selected=!1,d.push(a))}),d},actions:{setStatus:function(a){this.set("status",a.name);var b=this.setOption(a,"status","status_options");this.set("status_options",b)},setKidsGroup:function(a){this.set("kids",a.name);var b=this.setOption(a,"kids","kids_options");this.set("kids_options",b)},setTypeGroup:function(a){this.set("type",a.name);var b=this.setOption(a,"type","type_options");this.set("type_options",b)}}}),App.PeopleController=Ember.ArrayController.extend({getPermissions:function(){var a=this;App.Person.permissions().then(function(b){a.set("permissions",b.permissions)})},findPeople:function(){var a=this.get("find_name");if(a&&(a=a.replace(/^\s+|\s+$/g,""),0!=a.length)){var b={name:a},c=this;App.Person.find(b).then(function(a){var b=a.results;c.get("content").setObjects(b.records)})["catch"](function(a){c.set("error",a.message)})}},actions:{findPeople:function(){this.findPeople()},clearFind:function(){this.set("find_name",null),this.transitionToRoute("index")}}}),App.PersonController=Ember.ObjectController.extend({isAdmin:!1,getPermissions:function(){var a=this;App.Person.permissions().then(function(b){a.set("permissions",b.permissions);var c=!1;a.get("permissions")&&"Admin"==a.get("permissions").role&&(c=!0),a.set("isAdmin",c)})},actions:{toggleTeam:function(a){var b=[],c=this;App.Person.updateTeam(this.get("model").Id,a.team_id).then(function(d){a.in_team=d.team.in_team,a.access_manage=d.team.access_manage,a.access_contact=d.team.access_contact,c.get("model").team_serving.forEach(function(c){b.push(c.team_id==a.team_id?a:c)}),c.get("model").team_serving.setObjects(b)})["catch"](function(a){c.set("error",a.message)})}.observes("team_serving"),toggleSmallGroup:function(a){var b=[],c=this;App.Person.updateSmallGroup(this.get("model").Id,a.group_id).then(function(d){a.in_group=d.small_group.in_group,a.leader=d.small_group.leader,c.get("model").small_groups.forEach(function(c){b.push(c.group_id==a.group_id?a:c)}),c.get("model").small_groups.setObjects(b)})["catch"](function(a){c.set("error",a.message)})}.observes("small_groups"),toggleTeamPermissions:function(a){var b=[],c=this;App.Person.updateTeamPermissions(this.get("model").Id,a.team_id).then(function(d){a.in_team=d.team.in_team,a.access_manage=d.team.access_manage,a.access_contact=d.team.access_contact,c.get("model").team_permissions.forEach(function(c){b.push(c.team_id==a.team_id?a:c)}),c.get("model").team_permissions.setObjects(b)})["catch"](function(a){c.set("error",a.message)})}.observes("team_permissions")}}),Ember.Handlebars.registerBoundHelper("emailList",function(a){return a.map(function(a){return a.Name+" <"+a.Email+">"}).join(", ")}),App.CalendarDatePicker=Ember.TextField.extend({_picker:null,modelChangedValue:function(){var a=this.get("_picker");a&&a.setDate(this.get("value"))}.observes("value"),didInsertElement:function(){var a=(new Date).getFullYear(),b=this.$()[0],c=new Pikaday({field:b,yearRange:[1900,a+2],format:"YYYY-MM-DD"});this.set("_picker",c)},willDestroyElement:function(){var a=this.get("_picker");a&&a.destroy(),this.set("_picker",null)}}),App.Person=Ember.Object.extend({}),App.Person.reopenClass({url:"/api/people",getAll:function(a){var b=this.url;return a&&(b=this.url+"/page/"+a),ajax(b,{type:"GET",contentType:"application/json; charset=utf-8"})},find:function(a){return ajax(this.url+"/find",{type:"POST",data:JSON.stringify(a),contentType:"application/json; charset=utf-8",dataType:"json"})},findById:function(a){return a&&"undefined"!==a||(a="me"),ajax(this.url+"/"+a,{type:"GET",contentType:"application/json; charset=utf-8",dataType:"json"})},updateTeam:function(a,b){return ajax(this.url+"/"+a+"/team/"+b,{type:"POST",data:JSON.stringify({}),contentType:"application/json; charset=utf-8",dataType:"json"})},updateTeamPermissions:function(a,b){return ajax(this.url+"/"+a+"/team_permissions/"+b,{type:"POST",data:JSON.stringify({}),contentType:"application/json; charset=utf-8",dataType:"json"})},updateSmallGroup:function(a,b){return ajax(this.url+"/"+a+"/small_group/"+b,{type:"POST",data:JSON.stringify({}),contentType:"application/json; charset=utf-8",dataType:"json"})},permissions:function(){return ajax("/api/permissions",{type:"POST",data:JSON.stringify({}),contentType:"application/json; charset=utf-8",dataType:"json"})}}),App.Contact=Ember.Object.extend({}),App.Contact.reopenClass({url:"/api/contact",all:function(){return ajax(this.url,{type:"POST",data:JSON.stringify({}),contentType:"application/json; charset=utf-8",dataType:"json"})},teams:function(){return ajax(this.url+"/teams",{type:"POST",data:JSON.stringify({}),contentType:"application/json; charset=utf-8",dataType:"json"})},team_members:function(a,b){return ajax(this.url+"/teams/selected",{type:"POST",data:JSON.stringify({selected_teams:a,selected_small_groups:b}),contentType:"application/json; charset=utf-8",dataType:"json"})}}),App.Event=Ember.Object.extend({}),App.Event.reopenClass({url:"/api/event",all:function(){return ajax(this.url,{type:"POST",data:JSON.stringify({}),contentType:"application/json; charset=utf-8",dataType:"json"})},findById:function(a,b){if(!b){var c=new Date;b=c.toJSON().slice(0,10)}return ajax(this.url+"/"+a+"/"+b,{type:"GET",contentType:"application/json; charset=utf-8",dataType:"json"})}}),App.IndexRoute=Ember.Route.extend({beforeModel:function(){this.transitionTo("people")}}),App.PeopleRoute=Ember.Route.extend({model:function(){return[]},setupController:function(a,b){console.log("Setup PeopleRoute"),a.set("content",b),a.getPermissions(),a.findPeople()}}),App.PersonRoute=Ember.Route.extend({model:function(a){return"undefined"===a.id&&this.transitionTo("person","me"),App.Person.findById(a.Id).then(function(a){return a.person})},setupController:function(a,b){console.log("Setup PersonRoute"),a.set("content",b),a.getPermissions()}}),App.ContactRoute=Ember.Route.extend({model:function(){return App.Contact.all().then(function(a){return a.data})},setupController:function(a,b){console.log("Setup ContactRoute"),a.set("content",b),a.reset()}}),App.EventsRoute=Ember.Route.extend({model:function(){return App.Event.all().then(function(a){return a.data})}}),App.EventRoute=Ember.Route.extend({model:function(a){return App.Event.findById(a.Id).then(function(a){return a.data})},setupController:function(a,b){console.log("Setup EventRoute"),a.set("content",b)}});